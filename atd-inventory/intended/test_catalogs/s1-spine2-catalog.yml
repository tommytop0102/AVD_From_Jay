anta.tests.connectivity:
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf1.tsmc.com.tw
      neighbor_port: Ethernet3
      port: Ethernet2
    result_overwrite:
      custom_field: 'Local: Ethernet2 - Remote: s1-leaf1 Ethernet3'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf2.tsmc.com.tw
      neighbor_port: Ethernet3
      port: Ethernet3
    result_overwrite:
      custom_field: 'Local: Ethernet3 - Remote: s1-leaf2 Ethernet3'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf3.tsmc.com.tw
      neighbor_port: Ethernet3
      port: Ethernet4
    result_overwrite:
      custom_field: 'Local: Ethernet4 - Remote: s1-leaf3 Ethernet3'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf4.tsmc.com.tw
      neighbor_port: Ethernet3
      port: Ethernet5
    result_overwrite:
      custom_field: 'Local: Ethernet5 - Remote: s1-leaf4 Ethernet3'
- VerifyReachability:
    hosts:
    - destination: 192.168.51.3
      repeat: 1
      source: 192.168.51.2
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet2 (IP: 192.168.51.2) - Destination:
        s1-leaf1 Ethernet3 (IP: 192.168.51.3)'
- VerifyReachability:
    hosts:
    - destination: 192.168.51.7
      repeat: 1
      source: 192.168.51.6
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet3 (IP: 192.168.51.6) - Destination:
        s1-leaf2 Ethernet3 (IP: 192.168.51.7)'
- VerifyReachability:
    hosts:
    - destination: 192.168.51.11
      repeat: 1
      source: 192.168.51.10
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet4 (IP: 192.168.51.10) - Destination:
        s1-leaf3 Ethernet3 (IP: 192.168.51.11)'
- VerifyReachability:
    hosts:
    - destination: 192.168.51.15
      repeat: 1
      source: 192.168.51.14
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet5 (IP: 192.168.51.14) - Destination:
        s1-leaf4 Ethernet3 (IP: 192.168.51.15)'
anta.tests.hardware:
- VerifyEnvironmentPower:
    result_overwrite:
      custom_field: 'Accepted States: ''ok'''
    states:
    - ok
- VerifyEnvironmentCooling:
    result_overwrite:
      custom_field: 'Accepted States: ''ok'''
    states:
    - ok
- VerifyTemperature: null
- VerifyTransceiversManufacturers:
    manufacturers:
    - Arista Networks
    - Arastra, Inc.
    - Not Present
    result_overwrite:
      custom_field: 'Accepted Manufacturers: ''Arista Networks'', ''Arastra, Inc.'',
        ''Not Present'''
anta.tests.interfaces:
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet2
      status: up
    result_overwrite:
      custom_field: Interface Ethernet2 - P2P_LINK_TO_S1-LEAF1_Ethernet3 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet3
      status: up
    result_overwrite:
      custom_field: Interface Ethernet3 - P2P_LINK_TO_S1-LEAF2_Ethernet3 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet4
      status: up
    result_overwrite:
      custom_field: Interface Ethernet4 - P2P_LINK_TO_S1-LEAF3_Ethernet3 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet5
      status: up
    result_overwrite:
      custom_field: Interface Ethernet5 - P2P_LINK_TO_S1-LEAF4_Ethernet3 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Loopback0
      status: up
    result_overwrite:
      custom_field: Interface Loopback0 - EVPN_Overlay_Peering = 'up'
anta.tests.routing.bgp:
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.168.246.3
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf1 (IP: 192.168.246.3)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.168.246.4
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf2 (IP: 192.168.246.4)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.168.246.5
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf3 (IP: 192.168.246.5)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.168.246.6
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf4 (IP: 192.168.246.6)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.51.3
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf1 (IP: 192.168.51.3)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.51.7
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf2 (IP: 192.168.51.7)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.51.11
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf3 (IP: 192.168.51.11)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 192.168.51.15
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf4 (IP: 192.168.51.15)'
anta.tests.routing.generic:
- VerifyRoutingProtocolModel:
    model: multi-agent
    result_overwrite:
      custom_field: 'Routing protocol model: multi-agent'
anta.tests.system:
- VerifyNTP: null
